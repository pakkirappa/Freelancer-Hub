{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Freelancer Hub Node TypeScript Server API",
    "description": "This is the API documentation for the Freelancer Hub Node TypeScript Server."
  },
  "host": "localhost:5002",
  "basePath": "/",
  "schemes": ["http", "https"],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to users"
    },
    {
      "name": "Files",
      "description": "Operations related to file uploads and downloads"
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "API key for authentication. Format: `Bearer <token>`"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "externalDocs": {
    "description": "Find out more about the API",
    "url": "https://example.com/api-docs"
  },

  "paths": {
    "/api/v1/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns a list of all users.",
        "responses": {
          "200": {
            "description": "A list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user in the system.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/upload": {
      "post": {
        "summary": "Upload a file",
        "description": "Upload a single file to the server.",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file to upload"
          }
        ],
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "400": {
            "description": "Invalid file"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/files/{fileId}": {
      "get": {
        "summary": "Download a file",
        "description": "Download a file by its ID.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "File downloaded successfully"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["id", "name", "email"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FileResponse": {
      "type": "object",
      "required": ["id", "filename", "originalName"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{24}$",
          "description": "Unique file identifier"
        },
        "filename": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "System generated filename"
        },
        "originalName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "Original filename"
        },
        "mimetype": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_]*/[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_.]*$",
          "description": "MIME type of the file"
        },
        "size": {
          "type": "integer",
          "minimum": 0,
          "maximum": 104857600,
          "description": "File size in bytes (max 100MB)"
        },
        "uploadedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Upload timestamp"
        },
        "category": {
          "type": "string",
          "enum": ["document", "image", "video", "audio", "other"],
          "description": "File category"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "maxItems": 10,
          "uniqueItems": true,
          "description": "File tags"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true,
          "description": "Additional file metadata"
        },
        "permissions": {
          "$ref": "#/definitions/FilePermissions"
        },
        "downloadUrl": {
          "type": "string",
          "format": "uri",
          "description": "Direct download URL"
        },
        "thumbnailUrl": {
          "type": "string",
          "format": "uri",
          "description": "Thumbnail URL for images/videos"
        }
      }
    },
    "FilePermissions": {
      "type": "object",
      "properties": {
        "isPublic": {
          "type": "boolean",
          "default": false,
          "description": "Whether file is publicly accessible"
        },
        "allowedUsers": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$"
          },
          "description": "User IDs with access permission"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Access expiration date"
        }
      }
    },
    "SizeRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "minimum": 0,
          "description": "Minimum file size in bytes"
        },
        "max": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum file size in bytes"
        }
      }
    },
    "DateRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "Start date"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "End date"
        }
      }
    },
    "FileUploadRequest": {
      "type": "object",
      "required": ["files"],
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "binary"
          },
          "minItems": 1,
          "maxItems": 10,
          "description": "Files to upload"
        },
        "category": {
          "type": "string",
          "enum": ["document", "image", "video", "audio"],
          "description": "File category"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "maxItems": 10,
          "uniqueItems": true
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              { "type": "string" },
              { "type": "number" },
              { "type": "boolean" }
            ]
          }
        },
        "permissions": {
          "$ref": "#/definitions/FilePermissions"
        }
      }
    }
  }
}
